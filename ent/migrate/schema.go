// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AbteilungColumns holds the columns for the "Abteilung" table.
	AbteilungColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
	}
	// AbteilungTable holds the schema information for the "Abteilung" table.
	AbteilungTable = &schema.Table{
		Name:       "Abteilung",
		Columns:    AbteilungColumns,
		PrimaryKey: []*schema.Column{AbteilungColumns[0]},
	}
	// AngebotColumns holds the columns for the "Angebot" table.
	AngebotColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "subtitle", Type: field.TypeString, Nullable: true},
		{Name: "date_start", Type: field.TypeTime},
		{Name: "date_stop", Type: field.TypeTime},
		{Name: "link", Type: field.TypeString},
		{Name: "image", Type: field.TypeString},
		{Name: "anzeigen", Type: field.TypeBool},
	}
	// AngebotTable holds the schema information for the "Angebot" table.
	AngebotTable = &schema.Table{
		Name:       "Angebot",
		Columns:    AngebotColumns,
		PrimaryKey: []*schema.Column{AngebotColumns[0]},
	}
	// AnsprechpartnerColumns holds the columns for the "Ansprechpartner" table.
	AnsprechpartnerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "telefon", Type: field.TypeString, Nullable: true},
		{Name: "mobil", Type: field.TypeString, Nullable: true},
		{Name: "mail", Type: field.TypeString, Nullable: true},
		{Name: "lieferant_id", Type: field.TypeString, Nullable: true},
	}
	// AnsprechpartnerTable holds the schema information for the "Ansprechpartner" table.
	AnsprechpartnerTable = &schema.Table{
		Name:       "Ansprechpartner",
		Columns:    AnsprechpartnerColumns,
		PrimaryKey: []*schema.Column{AnsprechpartnerColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Ansprechpartner_Lieferant_ansprechpartners",
				Columns:    []*schema.Column{AnsprechpartnerColumns[5]},
				RefColumns: []*schema.Column{LieferantColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AusstellerColumns holds the columns for the "Aussteller" table.
	AusstellerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "artikelnummer", Type: field.TypeString},
		{Name: "artikelname", Type: field.TypeString},
		{Name: "specs", Type: field.TypeString},
		{Name: "preis", Type: field.TypeFloat32},
		{Name: "bild", Type: field.TypeString, Nullable: true},
	}
	// AusstellerTable holds the schema information for the "Aussteller" table.
	AusstellerTable = &schema.Table{
		Name:       "Aussteller",
		Columns:    AusstellerColumns,
		PrimaryKey: []*schema.Column{AusstellerColumns[0]},
	}
	// EinkaufColumns holds the columns for the "Einkauf" table.
	EinkaufColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "paypal", Type: field.TypeBool},
		{Name: "abonniert", Type: field.TypeBool},
		{Name: "geld", Type: field.TypeString, Nullable: true},
		{Name: "pfand", Type: field.TypeString, Nullable: true},
		{Name: "dinge", Type: field.TypeString},
		{Name: "abgeschickt", Type: field.TypeTime},
		{Name: "bild1", Type: field.TypeString, Nullable: true},
		{Name: "bild2", Type: field.TypeString, Nullable: true},
		{Name: "bild3", Type: field.TypeString, Nullable: true},
	}
	// EinkaufTable holds the schema information for the "Einkauf" table.
	EinkaufTable = &schema.Table{
		Name:       "Einkauf",
		Columns:    EinkaufColumns,
		PrimaryKey: []*schema.Column{EinkaufColumns[0]},
	}
	// JobsColumns holds the columns for the "Jobs" table.
	JobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "online", Type: field.TypeBool},
	}
	// JobsTable holds the schema information for the "Jobs" table.
	JobsTable = &schema.Table{
		Name:       "Jobs",
		Columns:    JobsColumns,
		PrimaryKey: []*schema.Column{JobsColumns[0]},
	}
	// LieferantColumns holds the columns for the "Lieferant" table.
	LieferantColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "firma", Type: field.TypeString},
		{Name: "kundennummer", Type: field.TypeString, Nullable: true},
		{Name: "webseite", Type: field.TypeString, Nullable: true},
	}
	// LieferantTable holds the schema information for the "Lieferant" table.
	LieferantTable = &schema.Table{
		Name:       "Lieferant",
		Columns:    LieferantColumns,
		PrimaryKey: []*schema.Column{LieferantColumns[0]},
	}
	// MitarbeiterColumns holds the columns for the "Mitarbeiter" table.
	MitarbeiterColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "short", Type: field.TypeString, Nullable: true},
		{Name: "image", Type: field.TypeBool},
		{Name: "sex", Type: field.TypeString, Nullable: true},
		{Name: "focus", Type: field.TypeString, Nullable: true},
		{Name: "mail", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "azubi", Type: field.TypeBool},
		{Name: "geburtstag", Type: field.TypeTime, Nullable: true},
		{Name: "gruppenwahl", Type: field.TypeString, Nullable: true},
		{Name: "home_office", Type: field.TypeString, Nullable: true},
		{Name: "mobil_business", Type: field.TypeString, Nullable: true},
		{Name: "mobil_privat", Type: field.TypeString, Nullable: true},
		{Name: "telefon_business", Type: field.TypeString, Nullable: true},
		{Name: "telefon_intern_1", Type: field.TypeString, Nullable: true},
		{Name: "telefon_intern_2", Type: field.TypeString, Nullable: true},
		{Name: "telefon_privat", Type: field.TypeString, Nullable: true},
		{Name: "abteilung_id", Type: field.TypeString, Nullable: true},
		{Name: "einkauf_id", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// MitarbeiterTable holds the schema information for the "Mitarbeiter" table.
	MitarbeiterTable = &schema.Table{
		Name:       "Mitarbeiter",
		Columns:    MitarbeiterColumns,
		PrimaryKey: []*schema.Column{MitarbeiterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Mitarbeiter_Abteilung_mitarbeiters",
				Columns:    []*schema.Column{MitarbeiterColumns[17]},
				RefColumns: []*schema.Column{AbteilungColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Mitarbeiter_Einkauf_mitarbeiter",
				Columns:    []*schema.Column{MitarbeiterColumns[18]},
				RefColumns: []*schema.Column{EinkaufColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PartnerColumns holds the columns for the "Partner" table.
	PartnerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "link", Type: field.TypeString},
		{Name: "image", Type: field.TypeString},
	}
	// PartnerTable holds the schema information for the "Partner" table.
	PartnerTable = &schema.Table{
		Name:       "Partner",
		Columns:    PartnerColumns,
		PrimaryKey: []*schema.Column{PartnerColumns[0]},
	}
	// PdfsColumns holds the columns for the "Pdfs" table.
	PdfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "body", Type: field.TypeString},
	}
	// PdfsTable holds the schema information for the "Pdfs" table.
	PdfsTable = &schema.Table{
		Name:       "Pdfs",
		Columns:    PdfsColumns,
		PrimaryKey: []*schema.Column{PdfsColumns[0]},
	}
	// StatusColumns holds the columns for the "Status" table.
	StatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "status", Type: field.TypeString},
		{Name: "since", Type: field.TypeString},
	}
	// StatusTable holds the schema information for the "Status" table.
	StatusTable = &schema.Table{
		Name:       "Status",
		Columns:    StatusColumns,
		PrimaryKey: []*schema.Column{StatusColumns[0]},
	}
	// WarenlieferungColumns holds the columns for the "Warenlieferung" table.
	WarenlieferungColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "angelegt", Type: field.TypeTime},
		{Name: "geliefert", Type: field.TypeTime, Nullable: true},
		{Name: "alter_preis", Type: field.TypeFloat32, Nullable: true},
		{Name: "neuer_preis", Type: field.TypeFloat32, Nullable: true},
		{Name: "preis", Type: field.TypeTime, Nullable: true},
		{Name: "artikelnummer", Type: field.TypeString},
	}
	// WarenlieferungTable holds the schema information for the "Warenlieferung" table.
	WarenlieferungTable = &schema.Table{
		Name:       "Warenlieferung",
		Columns:    WarenlieferungColumns,
		PrimaryKey: []*schema.Column{WarenlieferungColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AbteilungTable,
		AngebotTable,
		AnsprechpartnerTable,
		AusstellerTable,
		EinkaufTable,
		JobsTable,
		LieferantTable,
		MitarbeiterTable,
		PartnerTable,
		PdfsTable,
		StatusTable,
		WarenlieferungTable,
	}
)

func init() {
	AbteilungTable.Annotation = &entsql.Annotation{
		Table: "Abteilung",
	}
	AngebotTable.Annotation = &entsql.Annotation{
		Table: "Angebot",
	}
	AnsprechpartnerTable.ForeignKeys[0].RefTable = LieferantTable
	AnsprechpartnerTable.Annotation = &entsql.Annotation{
		Table: "Ansprechpartner",
	}
	AusstellerTable.Annotation = &entsql.Annotation{
		Table: "Aussteller",
	}
	EinkaufTable.Annotation = &entsql.Annotation{
		Table: "Einkauf",
	}
	JobsTable.Annotation = &entsql.Annotation{
		Table: "Jobs",
	}
	LieferantTable.Annotation = &entsql.Annotation{
		Table: "Lieferant",
	}
	MitarbeiterTable.ForeignKeys[0].RefTable = AbteilungTable
	MitarbeiterTable.ForeignKeys[1].RefTable = EinkaufTable
	MitarbeiterTable.Annotation = &entsql.Annotation{
		Table: "Mitarbeiter",
	}
	PartnerTable.Annotation = &entsql.Annotation{
		Table: "Partner",
	}
	PdfsTable.Annotation = &entsql.Annotation{
		Table: "Pdfs",
	}
	StatusTable.Annotation = &entsql.Annotation{
		Table: "Status",
	}
	WarenlieferungTable.Annotation = &entsql.Annotation{
		Table: "Warenlieferung",
	}
}

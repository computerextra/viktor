// Code generated by ent, DO NOT EDIT.

package angebot

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the angebot type in the database.
	Label = "angebot"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldSubtitle holds the string denoting the subtitle field in the database.
	FieldSubtitle = "subtitle"
	// FieldDateStart holds the string denoting the date_start field in the database.
	FieldDateStart = "date_start"
	// FieldDateStop holds the string denoting the date_stop field in the database.
	FieldDateStop = "date_stop"
	// FieldLink holds the string denoting the link field in the database.
	FieldLink = "link"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// FieldAnzeigen holds the string denoting the anzeigen field in the database.
	FieldAnzeigen = "anzeigen"
	// Table holds the table name of the angebot in the database.
	Table = "Angebot"
)

// Columns holds all SQL columns for angebot fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldSubtitle,
	FieldDateStart,
	FieldDateStop,
	FieldLink,
	FieldImage,
	FieldAnzeigen,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Angebot queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// BySubtitle orders the results by the subtitle field.
func BySubtitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSubtitle, opts...).ToFunc()
}

// ByDateStart orders the results by the date_start field.
func ByDateStart(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDateStart, opts...).ToFunc()
}

// ByDateStop orders the results by the date_stop field.
func ByDateStop(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDateStop, opts...).ToFunc()
}

// ByLink orders the results by the link field.
func ByLink(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLink, opts...).ToFunc()
}

// ByImage orders the results by the image field.
func ByImage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImage, opts...).ToFunc()
}

// ByAnzeigen orders the results by the anzeigen field.
func ByAnzeigen(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAnzeigen, opts...).ToFunc()
}

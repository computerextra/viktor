// Code generated by ent, DO NOT EDIT.

package einkauf

import (
	"time"
	"viktor/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContainsFold(FieldID, id))
}

// Paypal applies equality check predicate on the "Paypal" field. It's identical to PaypalEQ.
func Paypal(v bool) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldPaypal, v))
}

// Abonniert applies equality check predicate on the "Abonniert" field. It's identical to AbonniertEQ.
func Abonniert(v bool) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldAbonniert, v))
}

// Geld applies equality check predicate on the "Geld" field. It's identical to GeldEQ.
func Geld(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldGeld, v))
}

// Pfand applies equality check predicate on the "Pfand" field. It's identical to PfandEQ.
func Pfand(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldPfand, v))
}

// Dinge applies equality check predicate on the "Dinge" field. It's identical to DingeEQ.
func Dinge(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldDinge, v))
}

// Abgeschickt applies equality check predicate on the "Abgeschickt" field. It's identical to AbgeschicktEQ.
func Abgeschickt(v time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldAbgeschickt, v))
}

// Bild1 applies equality check predicate on the "Bild1" field. It's identical to Bild1EQ.
func Bild1(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldBild1, v))
}

// Bild2 applies equality check predicate on the "Bild2" field. It's identical to Bild2EQ.
func Bild2(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldBild2, v))
}

// Bild3 applies equality check predicate on the "Bild3" field. It's identical to Bild3EQ.
func Bild3(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldBild3, v))
}

// PaypalEQ applies the EQ predicate on the "Paypal" field.
func PaypalEQ(v bool) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldPaypal, v))
}

// PaypalNEQ applies the NEQ predicate on the "Paypal" field.
func PaypalNEQ(v bool) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldPaypal, v))
}

// AbonniertEQ applies the EQ predicate on the "Abonniert" field.
func AbonniertEQ(v bool) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldAbonniert, v))
}

// AbonniertNEQ applies the NEQ predicate on the "Abonniert" field.
func AbonniertNEQ(v bool) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldAbonniert, v))
}

// GeldEQ applies the EQ predicate on the "Geld" field.
func GeldEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldGeld, v))
}

// GeldNEQ applies the NEQ predicate on the "Geld" field.
func GeldNEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldGeld, v))
}

// GeldIn applies the In predicate on the "Geld" field.
func GeldIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIn(FieldGeld, vs...))
}

// GeldNotIn applies the NotIn predicate on the "Geld" field.
func GeldNotIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotIn(FieldGeld, vs...))
}

// GeldGT applies the GT predicate on the "Geld" field.
func GeldGT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGT(FieldGeld, v))
}

// GeldGTE applies the GTE predicate on the "Geld" field.
func GeldGTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGTE(FieldGeld, v))
}

// GeldLT applies the LT predicate on the "Geld" field.
func GeldLT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLT(FieldGeld, v))
}

// GeldLTE applies the LTE predicate on the "Geld" field.
func GeldLTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLTE(FieldGeld, v))
}

// GeldContains applies the Contains predicate on the "Geld" field.
func GeldContains(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContains(FieldGeld, v))
}

// GeldHasPrefix applies the HasPrefix predicate on the "Geld" field.
func GeldHasPrefix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasPrefix(FieldGeld, v))
}

// GeldHasSuffix applies the HasSuffix predicate on the "Geld" field.
func GeldHasSuffix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasSuffix(FieldGeld, v))
}

// GeldIsNil applies the IsNil predicate on the "Geld" field.
func GeldIsNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIsNull(FieldGeld))
}

// GeldNotNil applies the NotNil predicate on the "Geld" field.
func GeldNotNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotNull(FieldGeld))
}

// GeldEqualFold applies the EqualFold predicate on the "Geld" field.
func GeldEqualFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEqualFold(FieldGeld, v))
}

// GeldContainsFold applies the ContainsFold predicate on the "Geld" field.
func GeldContainsFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContainsFold(FieldGeld, v))
}

// PfandEQ applies the EQ predicate on the "Pfand" field.
func PfandEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldPfand, v))
}

// PfandNEQ applies the NEQ predicate on the "Pfand" field.
func PfandNEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldPfand, v))
}

// PfandIn applies the In predicate on the "Pfand" field.
func PfandIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIn(FieldPfand, vs...))
}

// PfandNotIn applies the NotIn predicate on the "Pfand" field.
func PfandNotIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotIn(FieldPfand, vs...))
}

// PfandGT applies the GT predicate on the "Pfand" field.
func PfandGT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGT(FieldPfand, v))
}

// PfandGTE applies the GTE predicate on the "Pfand" field.
func PfandGTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGTE(FieldPfand, v))
}

// PfandLT applies the LT predicate on the "Pfand" field.
func PfandLT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLT(FieldPfand, v))
}

// PfandLTE applies the LTE predicate on the "Pfand" field.
func PfandLTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLTE(FieldPfand, v))
}

// PfandContains applies the Contains predicate on the "Pfand" field.
func PfandContains(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContains(FieldPfand, v))
}

// PfandHasPrefix applies the HasPrefix predicate on the "Pfand" field.
func PfandHasPrefix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasPrefix(FieldPfand, v))
}

// PfandHasSuffix applies the HasSuffix predicate on the "Pfand" field.
func PfandHasSuffix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasSuffix(FieldPfand, v))
}

// PfandIsNil applies the IsNil predicate on the "Pfand" field.
func PfandIsNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIsNull(FieldPfand))
}

// PfandNotNil applies the NotNil predicate on the "Pfand" field.
func PfandNotNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotNull(FieldPfand))
}

// PfandEqualFold applies the EqualFold predicate on the "Pfand" field.
func PfandEqualFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEqualFold(FieldPfand, v))
}

// PfandContainsFold applies the ContainsFold predicate on the "Pfand" field.
func PfandContainsFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContainsFold(FieldPfand, v))
}

// DingeEQ applies the EQ predicate on the "Dinge" field.
func DingeEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldDinge, v))
}

// DingeNEQ applies the NEQ predicate on the "Dinge" field.
func DingeNEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldDinge, v))
}

// DingeIn applies the In predicate on the "Dinge" field.
func DingeIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIn(FieldDinge, vs...))
}

// DingeNotIn applies the NotIn predicate on the "Dinge" field.
func DingeNotIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotIn(FieldDinge, vs...))
}

// DingeGT applies the GT predicate on the "Dinge" field.
func DingeGT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGT(FieldDinge, v))
}

// DingeGTE applies the GTE predicate on the "Dinge" field.
func DingeGTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGTE(FieldDinge, v))
}

// DingeLT applies the LT predicate on the "Dinge" field.
func DingeLT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLT(FieldDinge, v))
}

// DingeLTE applies the LTE predicate on the "Dinge" field.
func DingeLTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLTE(FieldDinge, v))
}

// DingeContains applies the Contains predicate on the "Dinge" field.
func DingeContains(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContains(FieldDinge, v))
}

// DingeHasPrefix applies the HasPrefix predicate on the "Dinge" field.
func DingeHasPrefix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasPrefix(FieldDinge, v))
}

// DingeHasSuffix applies the HasSuffix predicate on the "Dinge" field.
func DingeHasSuffix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasSuffix(FieldDinge, v))
}

// DingeEqualFold applies the EqualFold predicate on the "Dinge" field.
func DingeEqualFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEqualFold(FieldDinge, v))
}

// DingeContainsFold applies the ContainsFold predicate on the "Dinge" field.
func DingeContainsFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContainsFold(FieldDinge, v))
}

// AbgeschicktEQ applies the EQ predicate on the "Abgeschickt" field.
func AbgeschicktEQ(v time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldAbgeschickt, v))
}

// AbgeschicktNEQ applies the NEQ predicate on the "Abgeschickt" field.
func AbgeschicktNEQ(v time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldAbgeschickt, v))
}

// AbgeschicktIn applies the In predicate on the "Abgeschickt" field.
func AbgeschicktIn(vs ...time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIn(FieldAbgeschickt, vs...))
}

// AbgeschicktNotIn applies the NotIn predicate on the "Abgeschickt" field.
func AbgeschicktNotIn(vs ...time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotIn(FieldAbgeschickt, vs...))
}

// AbgeschicktGT applies the GT predicate on the "Abgeschickt" field.
func AbgeschicktGT(v time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGT(FieldAbgeschickt, v))
}

// AbgeschicktGTE applies the GTE predicate on the "Abgeschickt" field.
func AbgeschicktGTE(v time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGTE(FieldAbgeschickt, v))
}

// AbgeschicktLT applies the LT predicate on the "Abgeschickt" field.
func AbgeschicktLT(v time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLT(FieldAbgeschickt, v))
}

// AbgeschicktLTE applies the LTE predicate on the "Abgeschickt" field.
func AbgeschicktLTE(v time.Time) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLTE(FieldAbgeschickt, v))
}

// Bild1EQ applies the EQ predicate on the "Bild1" field.
func Bild1EQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldBild1, v))
}

// Bild1NEQ applies the NEQ predicate on the "Bild1" field.
func Bild1NEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldBild1, v))
}

// Bild1In applies the In predicate on the "Bild1" field.
func Bild1In(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIn(FieldBild1, vs...))
}

// Bild1NotIn applies the NotIn predicate on the "Bild1" field.
func Bild1NotIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotIn(FieldBild1, vs...))
}

// Bild1GT applies the GT predicate on the "Bild1" field.
func Bild1GT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGT(FieldBild1, v))
}

// Bild1GTE applies the GTE predicate on the "Bild1" field.
func Bild1GTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGTE(FieldBild1, v))
}

// Bild1LT applies the LT predicate on the "Bild1" field.
func Bild1LT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLT(FieldBild1, v))
}

// Bild1LTE applies the LTE predicate on the "Bild1" field.
func Bild1LTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLTE(FieldBild1, v))
}

// Bild1Contains applies the Contains predicate on the "Bild1" field.
func Bild1Contains(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContains(FieldBild1, v))
}

// Bild1HasPrefix applies the HasPrefix predicate on the "Bild1" field.
func Bild1HasPrefix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasPrefix(FieldBild1, v))
}

// Bild1HasSuffix applies the HasSuffix predicate on the "Bild1" field.
func Bild1HasSuffix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasSuffix(FieldBild1, v))
}

// Bild1IsNil applies the IsNil predicate on the "Bild1" field.
func Bild1IsNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIsNull(FieldBild1))
}

// Bild1NotNil applies the NotNil predicate on the "Bild1" field.
func Bild1NotNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotNull(FieldBild1))
}

// Bild1EqualFold applies the EqualFold predicate on the "Bild1" field.
func Bild1EqualFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEqualFold(FieldBild1, v))
}

// Bild1ContainsFold applies the ContainsFold predicate on the "Bild1" field.
func Bild1ContainsFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContainsFold(FieldBild1, v))
}

// Bild2EQ applies the EQ predicate on the "Bild2" field.
func Bild2EQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldBild2, v))
}

// Bild2NEQ applies the NEQ predicate on the "Bild2" field.
func Bild2NEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldBild2, v))
}

// Bild2In applies the In predicate on the "Bild2" field.
func Bild2In(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIn(FieldBild2, vs...))
}

// Bild2NotIn applies the NotIn predicate on the "Bild2" field.
func Bild2NotIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotIn(FieldBild2, vs...))
}

// Bild2GT applies the GT predicate on the "Bild2" field.
func Bild2GT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGT(FieldBild2, v))
}

// Bild2GTE applies the GTE predicate on the "Bild2" field.
func Bild2GTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGTE(FieldBild2, v))
}

// Bild2LT applies the LT predicate on the "Bild2" field.
func Bild2LT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLT(FieldBild2, v))
}

// Bild2LTE applies the LTE predicate on the "Bild2" field.
func Bild2LTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLTE(FieldBild2, v))
}

// Bild2Contains applies the Contains predicate on the "Bild2" field.
func Bild2Contains(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContains(FieldBild2, v))
}

// Bild2HasPrefix applies the HasPrefix predicate on the "Bild2" field.
func Bild2HasPrefix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasPrefix(FieldBild2, v))
}

// Bild2HasSuffix applies the HasSuffix predicate on the "Bild2" field.
func Bild2HasSuffix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasSuffix(FieldBild2, v))
}

// Bild2IsNil applies the IsNil predicate on the "Bild2" field.
func Bild2IsNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIsNull(FieldBild2))
}

// Bild2NotNil applies the NotNil predicate on the "Bild2" field.
func Bild2NotNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotNull(FieldBild2))
}

// Bild2EqualFold applies the EqualFold predicate on the "Bild2" field.
func Bild2EqualFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEqualFold(FieldBild2, v))
}

// Bild2ContainsFold applies the ContainsFold predicate on the "Bild2" field.
func Bild2ContainsFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContainsFold(FieldBild2, v))
}

// Bild3EQ applies the EQ predicate on the "Bild3" field.
func Bild3EQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEQ(FieldBild3, v))
}

// Bild3NEQ applies the NEQ predicate on the "Bild3" field.
func Bild3NEQ(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNEQ(FieldBild3, v))
}

// Bild3In applies the In predicate on the "Bild3" field.
func Bild3In(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIn(FieldBild3, vs...))
}

// Bild3NotIn applies the NotIn predicate on the "Bild3" field.
func Bild3NotIn(vs ...string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotIn(FieldBild3, vs...))
}

// Bild3GT applies the GT predicate on the "Bild3" field.
func Bild3GT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGT(FieldBild3, v))
}

// Bild3GTE applies the GTE predicate on the "Bild3" field.
func Bild3GTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldGTE(FieldBild3, v))
}

// Bild3LT applies the LT predicate on the "Bild3" field.
func Bild3LT(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLT(FieldBild3, v))
}

// Bild3LTE applies the LTE predicate on the "Bild3" field.
func Bild3LTE(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldLTE(FieldBild3, v))
}

// Bild3Contains applies the Contains predicate on the "Bild3" field.
func Bild3Contains(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContains(FieldBild3, v))
}

// Bild3HasPrefix applies the HasPrefix predicate on the "Bild3" field.
func Bild3HasPrefix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasPrefix(FieldBild3, v))
}

// Bild3HasSuffix applies the HasSuffix predicate on the "Bild3" field.
func Bild3HasSuffix(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldHasSuffix(FieldBild3, v))
}

// Bild3IsNil applies the IsNil predicate on the "Bild3" field.
func Bild3IsNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldIsNull(FieldBild3))
}

// Bild3NotNil applies the NotNil predicate on the "Bild3" field.
func Bild3NotNil() predicate.Einkauf {
	return predicate.Einkauf(sql.FieldNotNull(FieldBild3))
}

// Bild3EqualFold applies the EqualFold predicate on the "Bild3" field.
func Bild3EqualFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldEqualFold(FieldBild3, v))
}

// Bild3ContainsFold applies the ContainsFold predicate on the "Bild3" field.
func Bild3ContainsFold(v string) predicate.Einkauf {
	return predicate.Einkauf(sql.FieldContainsFold(FieldBild3, v))
}

// HasMitarbeiter applies the HasEdge predicate on the "mitarbeiter" edge.
func HasMitarbeiter() predicate.Einkauf {
	return predicate.Einkauf(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, MitarbeiterTable, MitarbeiterColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMitarbeiterWith applies the HasEdge predicate on the "mitarbeiter" edge with a given conditions (other predicates).
func HasMitarbeiterWith(preds ...predicate.Mitarbeiter) predicate.Einkauf {
	return predicate.Einkauf(func(s *sql.Selector) {
		step := newMitarbeiterStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Einkauf) predicate.Einkauf {
	return predicate.Einkauf(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Einkauf) predicate.Einkauf {
	return predicate.Einkauf(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Einkauf) predicate.Einkauf {
	return predicate.Einkauf(sql.NotPredicates(p))
}

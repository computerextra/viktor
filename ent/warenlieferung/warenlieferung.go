// Code generated by ent, DO NOT EDIT.

package warenlieferung

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the warenlieferung type in the database.
	Label = "warenlieferung"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAngelegt holds the string denoting the angelegt field in the database.
	FieldAngelegt = "angelegt"
	// FieldGeliefert holds the string denoting the geliefert field in the database.
	FieldGeliefert = "geliefert"
	// FieldAlterPreis holds the string denoting the alterpreis field in the database.
	FieldAlterPreis = "alter_preis"
	// FieldNeuerPreis holds the string denoting the neuerpreis field in the database.
	FieldNeuerPreis = "neuer_preis"
	// FieldPreis holds the string denoting the preis field in the database.
	FieldPreis = "preis"
	// FieldArtikelnummer holds the string denoting the artikelnummer field in the database.
	FieldArtikelnummer = "artikelnummer"
	// Table holds the table name of the warenlieferung in the database.
	Table = "Warenlieferung"
)

// Columns holds all SQL columns for warenlieferung fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldAngelegt,
	FieldGeliefert,
	FieldAlterPreis,
	FieldNeuerPreis,
	FieldPreis,
	FieldArtikelnummer,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Warenlieferung queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the Name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByAngelegt orders the results by the angelegt field.
func ByAngelegt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAngelegt, opts...).ToFunc()
}

// ByGeliefert orders the results by the geliefert field.
func ByGeliefert(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGeliefert, opts...).ToFunc()
}

// ByAlterPreis orders the results by the AlterPreis field.
func ByAlterPreis(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlterPreis, opts...).ToFunc()
}

// ByNeuerPreis orders the results by the NeuerPreis field.
func ByNeuerPreis(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNeuerPreis, opts...).ToFunc()
}

// ByPreis orders the results by the Preis field.
func ByPreis(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPreis, opts...).ToFunc()
}

// ByArtikelnummer orders the results by the Artikelnummer field.
func ByArtikelnummer(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldArtikelnummer, opts...).ToFunc()
}

package frontend

import (
	"fmt"
	"github.com/computerextra/viktor/db"
)

templ JobsOverview(jobs []db.JobsModel, uri string) {
	@Page("CMS | Abteilungen", uri) {
		<div class="container mx-auto mt-10">
			@BackButton("/CMS")
			<h1 class="text-center">CMS - Jobs</h1>
			<a
				class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"
				href="/CMS/Jobs/Neu"
			>
				Neuen Job anlegen
			</a>
			<div class="flex flex-col mt-5 max-w-[60%] mx-auto">
				<div class="-m-1.5 overflow-x-auto">
					<div class="p-1.5 min-w-full inline-block align-middle">
						<div class="overflow-hidden">
							<table class="min-w-full divide-y divide-gray-200 dark:divide-neutral-700">
								<thead>
									<tr>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Name
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Online
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-end text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Action
										</th>
									</tr>
								</thead>
								<tbody class="divide-y divide-gray-200 dark:divide-neutral-700">
									for _, job := range jobs {
										@jobRow(job)
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

templ jobRow(job db.JobsModel) {
	<tr class="hover:bg-gray-100 dark:hover:bg-neutral-700">
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			<a href={ templ.SafeURL(fmt.Sprintf("/CMS/Jobs/%s", job.ID)) }>
				{ job.Name }
			</a>
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			if job.Online {
				@Yes()
			} else {
				@No()
			}
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-end text-sm font-medium">
			<div class="hs-dropdown relative inline-flex">
				<button id="hs-dropdown-custom-icon-trigger" type="button" class="hs-dropdown-toggle flex justify-center items-center size-9 text-sm font-semibold rounded-lg border border-gray-200 bg-white text-gray-800 shadow-2xs hover:bg-gray-50 focus:outline-hidden focus:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-white dark:hover:bg-neutral-800 dark:focus:bg-neutral-800" aria-haspopup="menu" aria-expanded="false" aria-label="Dropdown">
					<svg class="flex-none size-4 text-gray-600 dark:text-neutral-500" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle></svg>
				</button>
				<div class="z-50 hs-dropdown-menu transition-[opacity,margin] duration hs-dropdown-open:opacity-100 opacity-0 hidden min-w-60 bg-white shadow-md rounded-lg mt-2 dark:bg-neutral-800 dark:border dark:border-neutral-700" role="menu" aria-orientation="vertical" aria-labelledby="hs-dropdown-custom-icon-trigger">
					<div class="p-1 space-y-0.5">
						<a
							class="flex items-center gap-x-3.5 py-2 px-3 rounded-lg text-sm text-gray-800 hover:bg-gray-100 focus:outline-hidden focus:bg-gray-100 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 dark:focus:bg-neutral-700"
							href={ templ.SafeURL(fmt.Sprintf("/CMS/Jobs/%s", job.ID)) }
						>
							Bearbeiten
						</a>
						<div class="p-1 space-y-0.5">
							<form action={ templ.SafeURL(fmt.Sprintf("/CMS/Jobs/%s/Toggle", job.ID)) } method="post">
								<button
									type="submit"
									class="flex items-center gap-x-3.5 py-2 px-3 rounded-lg text-sm text-gray-800 hover:bg-gray-100 focus:outline-hidden focus:bg-gray-100 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 dark:focus:bg-neutral-700"
								>
									Toggle Online
								</button>
							</form>
						</div>
						<div class="p-1 space-y-0.5">
							<form action={ templ.SafeURL(fmt.Sprintf("/CMS/Jobs/%s/Delete", job.ID)) } method="post">
								<button
									type="submit"
									class="flex items-center gap-x-3.5 py-2 px-3 rounded-lg text-sm text-gray-800 hover:bg-gray-100 focus:outline-hidden focus:bg-gray-100 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 dark:focus:bg-neutral-700"
								>
									LÃ¶schen
								</button>
							</form>
						</div>
					</div>
				</div>
			</div>
		</td>
	</tr>
}

templ NeuerJob(uri string) {
	@Page("Neue Abteilung", uri) {
		<div class="container mx-auto mt-5">
			@BackButton("/CMS/Jobs")
			<h1 class="text-center">Neuen Job anlegen</h1>
			@JobForm(nil)
		</div>
	}
}

templ JobBearbeiten(job *db.JobsModel, uri string) {
	@Page("Abteilung bearbeiten", uri) {
		<div class="container mx-auto mt-5">
			@BackButton("/CMS/Jobs")
			<h1 class="text-center">{ job.Name } bearbeiten</h1>
			@JobForm(job)
		</div>
	}
}

templ JobForm(job *db.JobsModel) {
	{{
	var action string
	if job == nil {
		action = "/CMS/Jobs/Neu"
	} else {
		action = fmt.Sprintf("/CMS/Jobs/%s", job.ID)
	}
	}}
	<form action={ templ.SafeURL(action) } method="post" class="space-y-8">
		<div class="max-w-sm">
			<label
				for="name"
				class="block text-sm font-medium mb-2 dark:text-white"
			>Name</label>
			if job == nil {
				<input
					type="text"
					id="name"
					required
					name="name"
					class="py-2.5 sm:py-3 px-4 block w-full border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
					placeholder="you@site.com"
				/>
			} else {
				<input
					type="text"
					id="name"
					required
					value={ job.Name }
					name="name"
					class="py-2.5 sm:py-3 px-4 block w-full border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
					placeholder="you@site.com"
				/>
			}
		</div>
		<!-- Online -->
		<div class="flex items-center gap-x-3">
			<label for="online" class="relative inline-block w-13 h-7 cursor-pointer">
				if job != nil && job.Online {
					<input
						type="checkbox"
						id="online"
						checked
						name="online"
						class="peer sr-only"
					/>
				} else {
					<input
						type="checkbox"
						id="online"
						name="online"
						class="peer sr-only"
					/>
				}
				<span class="absolute inset-0 bg-gray-200 rounded-full transition-colors duration-200 ease-in-out peer-checked:bg-blue-600 dark:bg-neutral-700 dark:peer-checked:bg-blue-500 peer-disabled:opacity-50 peer-disabled:pointer-events-none"></span>
				<span class="absolute top-1/2 start-0.5 -translate-y-1/2 size-6 bg-white rounded-full shadow-xs transition-transform duration-200 ease-in-out peer-checked:translate-x-full dark:bg-neutral-400 dark:peer-checked:bg-white"></span>
				<!-- Left Icon (Off) -->
				<span class="absolute top-1/2 start-1 -translate-y-1/2 flex justify-center items-center size-5 text-gray-500 peer-checked:text-white transition-colors duration-200 dark:text-neutral-500">
					<svg class="shrink-0 size-3" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
						<path d="M18 6 6 18"></path>
						<path d="m6 6 12 12"></path>
					</svg>
				</span>
				<!-- Right Icon (On) -->
				<span class="absolute top-1/2 end-1 -translate-y-1/2 flex justify-center items-center size-5 text-gray-500 peer-checked:text-blue-600 transition-colors duration-200 dark:text-neutral-500">
					<svg class="shrink-0 size-3" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
						<polyline points="20 6 9 17 4 12"></polyline>
					</svg>
				</span>
			</label>
			<label
				for="anzeigen"
				class="text-sm text-gray-500 dark:text-neutral-400"
			>Auf Webseite anzeigen?</label>
		</div>
		<button
			type="submit"
			class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"
		>
			Speichern
		</button>
	</form>
}

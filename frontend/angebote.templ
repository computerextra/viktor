package frontend

import (
	"fmt"
	"github.com/computerextra/viktor/db"
	"time"
)

templ AngeboteOverview(angebote []db.AngebotModel, uri string) {
	@Page("CMS | Abteilungen", uri) {
		<div class="container mx-auto mt-10">
			@BackButton("/CMS")
			<h1 class="text-center">CMS - Abteilungen</h1>
			<a
				class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"
				href="/CMS/Angebote/Neu"
			>
				Neues Angebot anlegen
			</a>
			<div class="flex flex-col mt-5 mx-auto">
				<div class="-m-1.5 overflow-x-auto">
					<div class="p-1.5 min-w-full inline-block align-middle">
						<div class="overflow-hidden">
							<table class="min-w-full divide-y divide-gray-200 dark:divide-neutral-700">
								<thead>
									<tr>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Titel
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Sub Title
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											URL
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Start
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Ende
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Bild
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Online
										</th>
										<th
											scope="col"
											class="px-6 py-3 text-end text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
										>
											Action
										</th>
									</tr>
								</thead>
								<tbody class="divide-y divide-gray-200 dark:divide-neutral-700">
									for _, angebot := range angebote {
										@angebotRow(angebot)
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

templ angebotRow(angebot db.AngebotModel) {
	{{
		loc, _ := time.LoadLocation("Europe/Berlin")

		subtitle, subtitleOk := angebot.Subtitle()

		dateStart := time.Date(angebot.DateStart.Year(), angebot.DateStart.Month(), angebot.DateStart.Day(), 0, 0, 0, 0, loc).Format("02.01.2006")
		dateStop := time.Date(angebot.DateStop.Year(), angebot.DateStop.Month(), angebot.DateStop.Day(), 0, 0, 0, 0, loc).Format("02.01.2006")
	}}
	<tr class="hover:bg-gray-100 dark:hover:bg-neutral-700">
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			<a href={ templ.SafeURL(fmt.Sprintf("/CMS/Angebote/%s", angebot.ID)) }>
				{ angebot.Title }
			</a>
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			if subtitleOk {
				{ subtitle }
			} else {
				"-"
			}
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			<div class="hs-tooltip inline-block">
				<div class="max-w-[200px] overflow-hidden hs-tooltip-toggle">
					<a href={ templ.SafeURL(angebot.Link) } target="_blank" rel="noopener noreferrer" class="text-ellipsis">
						{ angebot.Link }
					</a>
				</div>
				<span class="hs-tooltip-content hs-tooltip-shown:opacity-100 hs-tooltip-shown:visible opacity-0 transition-opacity inline-block absolute invisible z-10 py-1 px-2 bg-gray-900 text-xs font-medium text-white rounded-md shadow-2xs dark:bg-neutral-700" role="tooltip">
					{ angebot.Link }
				</span>
			</div>
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			{ dateStart }
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			{ dateStop }
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			{ angebot.Image }
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
			if angebot.Anzeigen {
				@Yes()
			} else {
				@No()
			}
		</td>
		<td class="px-6 py-4 whitespace-nowrap text-end text-sm font-medium">
			<form action={ templ.SafeURL(fmt.Sprintf("/CMS/Angebote/%s/Delete", angebot.ID)) } method="post">
				<button
					type="submit"
					class="inline-flex items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent text-blue-600 hover:text-blue-800 focus:outline-hidden focus:text-blue-800 disabled:opacity-50 disabled:pointer-events-none dark:text-blue-500 dark:hover:text-blue-400 dark:focus:text-blue-400"
				>
					LÃ¶schen
				</button>
			</form>
		</td>
	</tr>
}

templ NeuesAngebot(uri string) {
	@Page("Neues Angebot", uri) {
		<div class="container mx-auto mt-5">
			@BackButton("/CMS/Angebote")
			<h1 class="text-center">Neues Angebot anlegen</h1>
			@AngebotForm(nil)
		</div>
	}
}

templ AngebotBearbeiten(angebot db.AngebotModel, uri string) {
	@Page("Angebot bearbeiten", uri) {
		<div class="container mx-auto mt-5">
			@BackButton("/CMS/Angebote")
			<h1 class="text-center">{ angebot.Title } bearbeiten</h1>
			@AngebotForm(&angebot)
		</div>
	}
}

templ AngebotForm(angebot *db.AngebotModel) {
	{{
	var action string
	if angebot == nil {
		action = "/CMS/Angebote/Neu"
	} else {
		action = fmt.Sprintf("/CMS/Angebote/%s", angebot.ID)
	}
	}}
	<form action={ templ.SafeURL(action) } method="post" class="space-y-8">
		<div class="max-w-sm">
			<label
				for="name"
				class="block text-sm font-medium mb-2 dark:text-white"
			>Name</label>
			if angebot == nil {
				<input
					type="text"
					id="name"
					name="name"
					class="py-2.5 sm:py-3 px-4 block w-full border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
					placeholder="you@site.com"
				/>
			} else {
				<input
					type="text"
					id="name"
					value={ angebot.Title }
					name="name"
					class="py-2.5 sm:py-3 px-4 block w-full border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
					placeholder="you@site.com"
				/>
			}
		</div>
		<button
			type="submit"
			class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"
		>
			Speichern
		</button>
	</form>
}
